version: 2
jobs:
  percy-finalize:
    docker:
      - image: percyio/agent
    steps:
      - run: percy finalize --all

  lint-unit-37: &lint-unit
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.5-stretch-node-browsers
        environment:
          PYTHON_VERSION: py37
    steps:
      - checkout
      - run: echo $PYTHON_VERSION > ver.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "dev-requirements.txt" }}
      - run:
          name: 🐍 pip dev requirements
          command: |
            sudo pip install virtualenv --upgrade
            python -m venv venv || virtualenv venv && . venv/bin/activate
            pip install --progress-bar off --no-cache-dir -r dev-requirements.txt
      - save_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "dev-requirements.txt" }}
          paths:
              - venv
      - run:
          name: 🌸 Lint
          command: |
            . venv/bin/activate
            set -eo pipefail
            npm ci
            npm run format:test
            npm run lint
            flake8 --ignore=E501,F401,F841,F811,W503 tests
      - run:
          name: 🔎 Unit Tests
          command: |
            npm run test-unit

  lint-unit-36:
    <<: *lint-unit
    docker:
      - image: circleci/python:3.6.9-stretch-node-browsers
        environment:
          PYTHON_VERSION: py36

  lint-unit-27:
    <<: *lint-unit
    docker:
      - image: circleci/python:2.7.16-stretch-node-browsers
        environment:
          PYTHON_VERSION: py27

  build-dash-37: &build-dash
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.5-stretch-node-browsers
        environment:
            PYTHON_VERSION: py37
    steps:
      - checkout
      - run: echo $PYTHON_VERSION > ver.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "dev-requirements.txt" }}
      - run:
          name: 🐍 pip dev requirements
          command: |
            sudo pip install virtualenv --upgrade
            python -m venv venv || virtualenv venv && . venv/bin/activate
            pip install --progress-bar off --no-cache-dir -r dev-requirements.txt
      - save_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "dev-requirements.txt" }}
          paths:
              - venv
      - run:
          name: 🏗️ build dash
          command: |
            . venv/bin/activate && mkdir packages
            # build main dash
            git clone --depth 1 https://github.com/plotly/dash.git dash-main
            cd dash-main && pip install -e .[dev] --progress-bar off && python setup.py sdist && mv dist/* ../packages/
            cd dash-renderer && npm run build
            python setup.py sdist && mv dist/* ../../packages/ && cd ../..
            # build dcc
            npm ci && npm run build && python setup.py sdist && mv dist/* ./packages
            # build html
            git clone --depth 1 https://github.com/plotly/dash-html-components.git
            cd dash-html-components && npm ci && npm run build
            python setup.py sdist && mv dist/* ../packages && cd .. && ls -la packages
      - persist_to_workspace:
          root: ~/project
          paths:
            - packages

  build-dash-36:
    <<: *build-dash
    docker:
      - image: circleci/python:3.6.9-stretch-node-browsers
        environment:
          PYTHON_VERSION: py36

  build-dash-27:
    <<: *build-dash
    docker:
      - image: circleci/python:2.7.16-stretch-node-browsers
        environment:
          PYTHON_VERSION: py27

  test-37: &test
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.5-stretch-node-browsers
        environment:
            PYTHON_VERSION: py37
            PERCY_PARALLEL_TOTAL: -1
    parallelism: 3
    steps:
      - checkout
      - run: echo $PYTHON_VERSION > ver.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "dev-requirements.txt" }}
      - attach_workspace:
          at: ~/project
      - run:
          name: 🧪 Run Integration Tests
          command: |
            . venv/bin/activate && rm -rf dash_core_components && ls -la
            cd packages && mv dash-*.tar.gz main.tar.gz && ls -la
            find . -name "dash_*.gz" | xargs pip install -I --progress-bar off --no-cache-dir
            pip install --no-cache-dir --progress-bar off main.tar.gz[dev,testing]
            pip list | grep dash | xargs pip show && cd ..
            TESTFILES=$(circleci tests glob "tests/integration/**/test_*.py" | circleci tests split --split-by=timings)
            pytest --headless --nopercyfinalize --junitxml=test-reports/junit_intg.xml ${TESTFILES}
      - store_artifacts:
          path: test-reports
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: /tmp/dash_artifacts

  test-36:
    <<: *test
    docker:
      - image: circleci/python:3.6.9-stretch-node-browsers
        environment:
          PYTHON_VERSION: py36
          PERCY_ENABLE: 0

  test-27:
    <<: *test
    docker:
      - image: circleci/python:2.7.16-stretch-node-browsers
        environment:
          PYTHON_VERSION: py27
          PERCY_ENABLE: 0

  test-legacy-37: &test-legacy
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.5-stretch-node-browsers
        environment:
            PYTHON_VERSION: py37
            PERCY_PARALLEL_TOTAL: -1
    parallelism: 2
    steps:
      - checkout
      - run: echo $PYTHON_VERSION > ver.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "dev-requirements.txt" }}
      - attach_workspace:
          at: ~/project
      - run:
          name: 🧪 Run Legacy Integration Tests
          command: |
            . venv/bin/activate && rm -rf dash_core_components && ls -la
            cd packages && mv dash-*.tar.gz main.tar.gz && ls -la
            find . -name "dash_*.gz" | xargs pip install -I --progress-bar off --no-cache-dir
            pip install --no-cache-dir --progress-bar off main.tar.gz[dev,testing]
            pip list | grep dash | xargs pip show && cd ..
            set -eo pipefail
            echo $(python -V 2>&1) | grep 3. && python -m unittest tests/test_dash_import.py
            TESTFILES=$(circleci tests glob "tests/test_integration_*.py" | circleci tests split --split-by=timings)
            pytest --durations=10 --junitxml=test-reports/junit_legacy.xml ${TESTFILES}
      - store_artifacts:
          path: test-reports
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: /tmp/dash_artifacts

  test-legacy-36:
    <<: *test-legacy
    docker:
      - image: circleci/python:3.6.9-stretch-node-browsers
        environment:
          PYTHON_VERSION: py36
          PERCY_ENABLE: 0
  test-legacy-27:
    <<: *test-legacy
    docker:
      - image: circleci/python:2.7.16-stretch-node-browsers
        environment:
          PYTHON_VERSION: py27
          PERCY_ENABLE: 0

workflows:
  version: 2
  python3.7:
    jobs:
      - lint-unit-37
      - build-dash-37
      - test-37:
          requires:
            - build-dash-37
      - test-legacy-37:
          requires:
            - build-dash-37
      - percy-finalize:
          requires:
            - test-37
            - test-legacy-37

  python3.6:
    jobs:
      - lint-unit-36
      - build-dash-36
      - test-36:
          requires:
            - build-dash-36
      - test-legacy-36:
          requires:
            - build-dash-36

  python2.7:
    jobs:
      - lint-unit-27
      - build-dash-27
      - test-27:
          requires:
            - build-dash-27
      - test-legacy-27:
          requires:
            - build-dash-27
